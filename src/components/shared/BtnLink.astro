---
export interface Props {
  href: string;
  text: string;
  className?: string;
  variant: "primary" | "secondary";
  [key: string]: any; 
}

const { href, text, className, variant, ...rest } = Astro.props;

const getThemeStyle = (variant: "primary" | "secondary") => {
  if (variant === "primary") {
    return "bg-primary border-transparent hover:border-[#172554] after:bg-[#172554]";
  }
  return "text-primary border border-primary hover:bg-primary hover:text-white";
};

const getTextColor = (variant: "primary" | "secondary") => {
  if (variant === "primary") {
    return "text-white";
  }
  return "text-primary";
};
---

<a
  href={href}
  class={`px-6 py-3 rounded-full outline-none relative overflow-hidden border duration-300 ease-linear
          after:absolute after:inset-x-0 after:aspect-square after:scale-0 after:opacity-70 after:origin-center after:duration-300 after:ease-linear after:rounded-full after:top-0 after:left-0
          hover:after:opacity-100 hover:after:scale-[2.5]
          ${getThemeStyle(variant)} ${getTextColor(variant)} ${className || ""}`}
  {...rest}
>
  <span class="relative z-10">{text}</span>
</a>
