---
import Navbar from "./Navbar.astro";
import Footer from "./Footer.astro";
import Analytics from "@vercel/analytics/astro";
import SpeedInsights from "@vercel/speed-insights/astro";

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.png" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content="HFP - Budy dla psÃ³w" />
    <title>{title}</title>

    <link
      href="https://fonts.googleapis.com/css2?family=Raleway:wght@300;400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <link rel="stylesheet" href="/agency-template/style/custom.css" />
  </head>

  <body class="overflow-hidden overflow-y-auto bg-body">
    <Navbar />
    <main class="prose prose-sm md:prose lg:prose-lg mx-auto px-4 py-12 text-gray-800 dark:text-gray-200">
      <slot />
    </main>
    <Analytics />
    <SpeedInsights />
    <Footer />

    <script type="module" src="/js/track-events.js"></script>

    <script is:inline>
      {`
        detectSystemTheme();
        function changeThemeManually() {
          const localAppTheme = localStorage.getItem("theme");
          if (localAppTheme === "light") changeThemeToDark();
          if (localAppTheme === "dark") changeThemeToLight();
          if (!localAppTheme) detectSystemTheme(true);
        }

        function detectSystemTheme(manual = false) {
          if (
            localStorage.getItem("theme") === "dark" ||
            (!("theme" in localStorage) &&
              window.matchMedia("(prefers-color-scheme: light)").matches)
          ) {
            document.documentElement.classList.add("light");
            if (manual) localStorage.setItem("theme", "light");
          } else {
            document.documentElement.classList.remove("dark");
            if (manual) localStorage.setItem("theme", "light");
          }
        }

        function changeThemeToDark() {
          localStorage.setItem("theme", "dark");
          document.documentElement.classList.add("light");
        }

        function changeThemeToLight() {
          localStorage.setItem("theme", "light");
          document.documentElement.classList.remove("light");
        }
      `}
    </script>

    <!-- Nawigacja mobilna -->
    <script is:inline>
      {`
        const toggleMenu = document.querySelector("[data-toggle-nav]");
        const navbar = document.querySelector("[data-navbar]");
        const overlayNav = document.querySelector("[data-nav-overlay]");

        if (toggleMenu) {
          toggleMenu.addEventListener("click", (e) => {
            e.preventDefault();
            const isOpen = toggleMenu.getAttribute("data-open-nav") === "true";
            toggleMenu.setAttribute("data-open-nav", String(!isOpen));
            overlayNav.setAttribute("data-is-visible", String(!isOpen));
            document.body.classList.toggle("!overflow-y-hidden", !isOpen);
            navbar.style.height = isOpen ? "0px" : \`\${navbar.scrollHeight}px\`;
          });

          navbar.addEventListener("click", () => {
            toggleMenu.setAttribute("data-open-nav", "false");
            overlayNav.setAttribute("data-is-visible", "false");
            document.body.classList.remove("!overflow-y-hidden");
            navbar.style.height = "0px";
          });

          overlayNav.addEventListener("click", () => {
            toggleMenu.setAttribute("data-open-nav", "false");
            overlayNav.setAttribute("data-is-visible", "false");
            document.body.classList.remove("!overflow-y-hidden");
            navbar.style.height = "0px";
          });
        }
      `}
    </script>
  </body>
</html>
