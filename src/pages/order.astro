---
import OrderTransit from '../components/sections/OrderTransit.astro';
import Layout from '../layouts/Layout.astro';

interface Prices {
  [key: string]: number;
}

const prices: Prices = {
  'Mała Buda': 450,
  'Średnia Buda': 600,
  'Duża Buda': 700,
  'Bardzo Duża Buda': 1000
};

const sizes = [
  {
    name: 'Mała Buda',
    dimensions: '50x60 cm',
    description: 'Idealna dla małych psów do 10kg'
  },
  {
    name: 'Średnia Buda', 
    dimensions: '60x80 cm',
    description: 'Odpowiednia dla psów średniej wielkości 10-25kg'
  },
  {
    name: 'Duża Buda',
    dimensions: '70x100 cm', 
    description: 'Dla dużych psów 25-45kg'
  },
  {
    name: 'Bardzo Duża Buda',
    dimensions: '90x120 cm',
    description: 'Dla największych ras powyżej 45kg'
  }
];

const additionalOptions = [
  {
    id: 'insulation',
    name: 'Ocieplenie',
    description: 'Dodatkowa warstwa izolacyjna chroniąca przed zimnem i upałem',
    price: 100
  },
  {
    id: 'legs',
    name: 'Nóżki',
    description: 'Podnoszą budę nad poziom podłoża, chroniąc przed wilgocią',
    price: 50
  },
  {
    id: 'curtain',
    name: 'Kurtyna',
    description: 'Elastyczna zasłona chroniąca przed wiatrem i deszczem',
    price: 50
  }
];

const deliveryOptions = [
  {
    id: 'courier',
    name: 'Wysyłka kurierem',
    description: 'Natychmiastowa wysyłka, płatność z góry',
    price: 200
  },
  {
    id: 'courier-cod',
    name: 'Wysyłka kurierem za pobraniem',
    description: 'Natychmiastowa wysyłka, płatność przy odbiorze',
    price: 250
  },
  {
    id: 'company-delivery',
    name: 'Dowóz przez naszego pracownika',
    description: '50 zł za każde rozpoczęte 100 km',
    price: 'Cena zależna od odległości'
  },
  {
    id: 'pickup',
    name: 'Odbiór osobisty',
    description: 'Odbiór w miejscu produkcji',
    price: 0,
    default: true
  }
];
---

<Layout title="Order">
    <main class="max-w-4xl mx-auto p-4 mt-32">
        <h2 class="text-3xl font-semibold text-heading-1 mb-6">Zamow telefoniczne pod numerem telefonu <a href="tel:+48 503 919 318" class="text-primary">+48 503 919 318</a> , lub wypełnij formularz poniżej a nasz dział obsługi skontatkuje się z Tobą 
        </h2>
        <script define:vars={{ prices }}>
            document.addEventListener('DOMContentLoaded', () => {
                document.querySelectorAll('.size-option').forEach(button => {
                    const title = button.querySelector('h2')?.textContent;
                    if (title) {
                        const priceElement = document.createElement('p');
                        priceElement.className = 'mt-4 text-lg font-semibold text-primary';
                        priceElement.textContent = `${prices[title]} zł`;
                        button.appendChild(priceElement);
                    }
                });
            });
        </script>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            {sizes.map(size => (
                <button class="size-option p-6 border-2 border-gray-200 rounded-xl hover:border-primary focus:border-primary focus:outline-none transition-colors">
                    <h2 class="text-xl font-semibold text-heading-1 mb-2">{size.name}</h2>
                    <p class="text-heading-3">{size.dimensions}</p>
                    <p class="mt-2 text-sm text-gray-600 dark:text-gray-400">{size.description}</p>
                </button>
            ))}
        </div>

        <div class="mt-12">
            <h2 class="text-2xl font-semibold text-heading-1 mb-6">Opcje dodatkowe</h2>
            
            <div class="space-y-4">
                {additionalOptions.map(option => (
                    <label class="flex items-center p-4 border-2 border-gray-200 rounded-xl hover:border-primary cursor-pointer">
                        <input 
                            type="checkbox" 
                            id={option.id}
                            class="w-5 h-5 text-primary rounded border-gray-300 focus:ring-primary"
                        />
                        <div class="ml-4">
                            <span class="font-medium text-heading-1">{option.name}</span>
                            <p class="text-sm text-gray-600 dark:text-gray-400">{option.description}</p>
                            <span class="text-sm text-primary" id={`${option.id}-price`}>{option.price} zł</span>
                        </div>
                    </label>
                ))}
            </div>
        </div>

        <div class="mt-12">
            <h2 class="text-2xl font-semibold text-heading-1 mb-6">Opcje dostawy</h2>
            
            <div class="space-y-4">
                {deliveryOptions.map(option => (
                    <label class="delivery-option flex items-center p-4 border-2 border-gray-200 rounded-xl hover:border-primary cursor-pointer">
                        <input 
                            type="radio" 
                            name="delivery" 
                            value={option.id}
                            class="w-5 h-5 text-primary border-gray-300 focus:ring-primary"
                            checked={option.default}
                        />
                        <div class="ml-4">
                            <span class="font-medium text-heading-1">{option.name}</span>
                            <p class="text-sm text-gray-600 dark:text-gray-400">{option.description}</p>
                            <span class="text-sm text-primary">
                                {typeof option.price === 'number' ? `${option.price} zł` : option.price}
                            </span>
                        </div>
                    </label>
                ))}
            </div>
                    <OrderTransit />
        </div>

        <div class="mt-12 p-6 bg-white dark:bg-slate-800 rounded-xl shadow-lg">
            <h2 class="text-2xl font-semibold text-heading-1 mb-6">Podsumowanie zamówienia</h2>
            
            <div class="space-y-4">
                <div class="selected-options">
                    <h3 class="font-medium text-heading-2 mb-3">Wybrane opcje:</h3>
                    <ul id="summary-list" class="list-disc list-inside space-y-2 text-gray-600 dark:text-gray-400">
                    </ul>
                </div>

                <div class="total mt-6 pt-4 border-t border-gray-200">
                    <div class="flex justify-between items-center">
                        <span class="text-lg font-semibold text-heading-1">Suma:</span>
                        <span id="total-price" class="text-lg font-bold text-primary">0 zł</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="mt-12 p-6 bg-white dark:bg-slate-800 rounded-xl shadow-lg">
            <h2 class="text-2xl font-semibold text-heading-1 mb-6">Dane kontaktowe w celu realizacji zamówienia</h2>
            
            <form class="space-y-6">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                        <label for="firstName" class="block text-sm font-medium text-heading-3 mb-1">
                            Imię
                        </label>
                        <input
                            type="text"
                            id="firstName"
                            name="firstName"
                            required
                            class="w-full px-4 py-2 border border-gray-200 rounded-lg focus:outline-none focus:border-primary"
                            placeholder="Wprowadź imię"
                        />
                    </div>

                    <div>
                        <label for="lastName" class="block text-sm font-medium text-heading-3 mb-1">
                            Nazwisko
                        </label>
                        <input
                            type="text"
                            id="lastName"
                            name="lastName"
                            required
                            class="w-full px-4 py-2 border border-gray-200 rounded-lg focus:outline-none focus:border-primary"
                            placeholder="Wprowadź nazwisko"
                        />
                    </div>
                </div>

                <div>
                    <label for="phone" class="block text-sm font-medium text-heading-3 mb-1">
                        Numer telefonu
                    </label>
                    <input
                        type="tel"
                        id="phone"
                        name="phone"
                        required
                        class="w-full px-4 py-2 border border-gray-200 rounded-lg focus:outline-none focus:border-primary"
                        placeholder="np. 123-456-789"
                    />
                </div>

                <div>
                    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                        <div>
                            <label for="street" class="block text-sm font-medium text-heading-3 mb-1">
                                Ulica
                            </label>
                            <input
                                type="text"
                                id="street"
                                name="street"
                                required
                                class="w-full px-4 py-2 border border-gray-200 rounded-lg focus:outline-none focus:border-primary"
                                placeholder="Nazwa ulicy"
                            />
                        </div>
                        <div>
                            <label for="houseNumber" class="block text-sm font-medium text-heading-3 mb-1">
                                Numer domu/mieszkania
                            </label>
                            <input
                                type="text"
                                id="houseNumber"
                                name="houseNumber"
                                required
                                class="w-full px-4 py-2 border border-gray-200 rounded-lg focus:outline-none focus:border-primary"
                                placeholder="Nr domu/mieszkania"
                            />
                        </div>
                        <div>
                            <label for="postalCode" class="block text-sm font-medium text-heading-3 mb-1">
                                Kod pocztowy
                            </label>
                            <input
                                type="text"
                                id="postalCode"
                                name="postalCode"
                                required
                                pattern="[0-9]{2}-[0-9]{3}"
                                class="w-full px-4 py-2 border border-gray-200 rounded-lg focus:outline-none focus:border-primary"
                                placeholder="00-000"
                            />
                        </div>
                        <div>
                            <label for="city" class="block text-sm font-medium text-heading-3 mb-1">
                                Miasto
                            </label>
                            <input
                                type="text"
                                id="city"
                                name="city"
                                required
                                class="w-full px-4 py-2 border border-gray-200 rounded-lg focus:outline-none focus:border-primary"
                                placeholder="Nazwa miasta"
                            />
                        </div>
                    </div>
                </div>

                <button
                    type="submit"
                    class="w-full px-6 py-3 bg-primary text-white rounded-lg hover:bg-primary/90 transition-colors font-medium"
                >
                    Złóż zamówienie
                </button>
            </form>
        </div>
        <script>
            const deliveryOptions = [
  {
    id: 'courier',
    name: 'Wysyłka kurierem',
    description: 'Natychmiastowa wysyłka, płatność z góry',
    price: 200
  },
  {
    id: 'courier-cod',
    name: 'Wysyłka kurierem za pobraniem',
    description: 'Natychmiastowa wysyłka, płatność przy odbiorze',
    price: 250
  },
  {
    id: 'company-delivery',
    name: 'Dowóz przez naszego pracownika',
    description: '50 zł za każde rozpoczęte 100 km',
    price: 'Cena zależna od odległości'
  },
  {
    id: 'pickup',
    name: 'Odbiór osobisty',
    description: 'Odbiór w miejscu produkcji',
    price: 0,
    default: true
  }
];

            function updateSummary() {
                const summaryList = document.getElementById('summary-list');
                const totalPriceElement = document.getElementById('total-price');
                if (!summaryList || !totalPriceElement) return;

                let total = 0;
                summaryList.innerHTML = '';

                // Get selected size
                const selectedSize = document.querySelector('.size-option.border-primary');
                if (selectedSize) {
                    const sizeName = selectedSize.querySelector('h2')?.textContent;
                    const priceText = selectedSize.querySelector('.text-primary')?.textContent;
                    if (sizeName && priceText) {
                        const sizePrice = parseInt(priceText);
                        summaryList.innerHTML += `<li>${sizeName} - ${sizePrice} zł</li>`;
                        total += sizePrice;
                    }
                }

                // Check additional options
                const additionalOptions = [
                    { id: 'insulation', priceId: 'insulation-price' },
                    { id: 'legs', price: 50 },
                    { id: 'curtain', price: 50 }
                ];

                additionalOptions.forEach(option => {
                    const checkbox = document.getElementById(option.id) as HTMLInputElement;
                    if (checkbox?.checked) {
                        let price = option.price;
                        if (option.priceId) {
                            const priceElement = document.getElementById(option.priceId);
                            price = parseInt(priceElement?.textContent || '0');
                        }
                        summaryList.innerHTML += `<li>${checkbox.closest('label')?.querySelector('.font-medium')?.textContent} - ${price} zł</li>`;
                        total += price as number;
                    }
                });

                // Get selected delivery
                const selectedDelivery = document.querySelector('input[name="delivery"]:checked');
                if (selectedDelivery) {
                    const deliveryLabel = selectedDelivery.closest('label');
                    const deliveryName = deliveryLabel?.querySelector('.font-medium')?.textContent;
                    
                    const deliveryId = (selectedDelivery as HTMLInputElement).value;
                    const deliveryPrice = deliveryOptions.find(option => option.id === deliveryId)?.price;

                    if (deliveryLabel && deliveryName && deliveryPrice) {
                        if (deliveryPrice !== 'Cena zależna od odległości') {
                            const price = parseInt(deliveryPrice.toString());
                            summaryList.innerHTML += `<li>${deliveryName} - ${price} zł</li>`;
                            total += price;
                        } else {
                            const result = document.getElementById('transit-result');
                            if (result) {
                                const costMatch = result.textContent?.match(/Koszt dostawy: (\d+) zł/);
                                if (costMatch) {
                                    const deliveryCost = parseInt(costMatch[1]);
                                    summaryList.innerHTML += `<li>${deliveryName} - ${deliveryCost} zł</li>`;
                                    total += deliveryCost;
                                }
                            }
                        }
                    }
                }

                totalPriceElement.textContent = `${total} zł`;
            }

            // Add event listeners
            document.querySelectorAll('.size-option').forEach(option => {
                option.addEventListener('click', () => {
                    document.querySelectorAll('.size-option').forEach(opt => {
                        opt.classList.remove('border-primary');
                        opt.classList.add('border-gray-200');
                    });
                    option.classList.remove('border-gray-200');
                    option.classList.add('border-primary');
                    updateSummary();
                });
            });

            document.querySelectorAll('input[type="checkbox"], input[name="delivery"]')
                .forEach(input => input.addEventListener('change', updateSummary));

            // Initial update
            updateSummary();

            // Form submission handler
            document.querySelector('form')?.addEventListener('submit', async (e) => {
                e.preventDefault();

                const form = e.target as HTMLFormElement;
                const formData = new FormData(form);
                
                // Get selected size
                const selectedSize = document.querySelector('.size-option.border-primary');
                const sizeName = selectedSize?.querySelector('h2')?.textContent;
                const sizePrice = selectedSize?.querySelector('.text-primary')?.textContent;

                // Get selected delivery
                const selectedDelivery = document.querySelector('input[name="delivery"]:checked') as HTMLInputElement;
                const deliveryName = selectedDelivery?.closest('label')?.querySelector('.font-medium')?.textContent;

                // Get total price
                const totalPrice = document.getElementById('total-price')?.textContent;

                const data = {
                    name: formData.get('name'),
                    email: formData.get('email'),
                    phone: formData.get('phone'),
                    street: formData.get('street'),
                    houseNumber: formData.get('houseNumber'),
                    postalCode: formData.get('postalCode'),
                    city: formData.get('city'),
                    size: sizeName,
                    sizePrice: sizePrice,
                    delivery: deliveryName,
                    insulation: (document.getElementById('insulation') as HTMLInputElement)?.checked,
                    legs: (document.getElementById('legs') as HTMLInputElement)?.checked,
                    curtain: (document.getElementById('curtain') as HTMLInputElement)?.checked,
                    totalPrice: totalPrice
                };

                try {
                    const response = await fetch("https://script.google.com/macros/s/AKfycbxIR7YKpo7bH1GOosuqrK1Iq0nDg84FdFXHv94QF9NGjap25odMrvljeEoroiNNPwbykQ/exec", {
                        method: "POST",
                        body: JSON.stringify(data),
                        headers: { "Content-Type": "application/json" },
                    });

                    if (response.ok) {
                        alert('Zamówienie zostało wysłane pomyślnie!');
                        form.reset();
                    } else {
                        throw new Error('Wystąpił błąd podczas wysyłania zamówienia');
                    }
                } catch (error) {
                    alert('Wystąpił błąd podczas wysyłania zamówienia. Spróbuj ponownie później.');
                    console.error('Error:', error);
                }
            });
        </script>
    </main>
</Layout>
