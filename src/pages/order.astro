---
import OrderTransit from "../components/pages/order/OrderTransit.astro";
import Layout from "../layouts/Layout.astro";
import Summary from "../components/pages/order/Summary.astro";
import SizeSelection from "../components/pages/order/SizeSelection.astro";
import DeliveryOptions from "../components/pages/order/DeliveryOptions.astro";
import PaymentMethods from "../components/pages/order/PaymentMethods.astro";
import DeliveryContactForm from "../components/pages/order/DeliveryContactForm.astro";
import AdditionalOptions from "../components/pages/order/AdditionalOptions.astro";
interface Prices {
  [key: string]: number;
}
---

<Layout title="Order">
  <main class="max-w-4xl mx-auto p-4 mt-32">
    <h2 class="text-3xl font-semibold text-heading-1 mb-6">
      Zamow telefoniczne pod numerem telefonu <a
        href="tel:+48 503 919 318"
        class="text-primary">+48 503 919 318</a
      > , lub wypełnij formularz poniżej a nasz dział obsługi skontatkuje się z Tobą
    </h2>
    <SizeSelection />
    <AdditionalOptions />
    <DeliveryOptions />
    <PaymentMethods />
    <Summary />
    <DeliveryContactForm />
    <script>
 

      function updateSummary() {
        const summaryList = document.getElementById("summary-list");
        const totalPriceElement = document.getElementById("total-price");
        if (!summaryList || !totalPriceElement) return;

        let total = 0;
        summaryList.innerHTML = "";

        // Get selected size
        const selectedSize = document.querySelector(
          ".size-option.border-primary"
        );
        if (selectedSize) {
          const sizeName = selectedSize.querySelector("h2")?.textContent;
          const priceText =
            selectedSize.querySelector(".text-primary")?.textContent;
          if (sizeName && priceText) {
            const sizePrice = parseInt(priceText);
            summaryList.innerHTML += `<li>${sizeName} - ${sizePrice} zł</li>`;
            total += sizePrice;
          }
        }



        additionalOptions.forEach((option) => {
          const checkbox = document.getElementById(
            option.id
          ) as HTMLInputElement;
          if (checkbox?.checked) {
            summaryList.innerHTML += `<li>${checkbox.closest("label")?.querySelector(".font-medium")?.textContent} - ${option.price} zł</li>`;
            total += option.price;
          }
        });

        // Get selected delivery
        const selectedDelivery = document.querySelector(
          'input[name="delivery"]:checked'
        ) as HTMLInputElement;
        if (selectedDelivery) {
          const deliveryId = selectedDelivery.value;
          const deliveryOption = deliveryOptions.find(
            (option) => option.id === deliveryId
          );
          const deliveryName = selectedDelivery
            .closest("label")
            ?.querySelector(".font-medium")?.textContent;

          if (deliveryId === "company-delivery") {
            const result = document.getElementById("transit-result");
            if (result && result.textContent) {
              const costMatch = result.textContent.match(
                /Koszt dostawy: (\d+) zł/
              );
              if (costMatch) {
                const deliveryCost = parseInt(costMatch[1]);
                summaryList.innerHTML += `<li>${deliveryName} - ${deliveryCost} zł</li>`;
                total += deliveryCost;
              }
            }
          } else if (deliveryId === "pickup") {
            summaryList.innerHTML += `<li>${deliveryName} - 0 zł</li>`;
          } else if (deliveryOption) {
            summaryList.innerHTML += `<li>${deliveryName} - ${deliveryOption.price} zł</li>`;
            total += deliveryOption.price as number;
          }
        }

        totalPriceElement.textContent = `${total} zł`;
      }

      // Add event listeners
      document.querySelectorAll(".size-option").forEach((option) => {
        option.addEventListener("click", () => {
          document.querySelectorAll(".size-option").forEach((opt) => {
            opt.classList.remove("border-primary");
            opt.classList.add("border-gray-200");
          });
          option.classList.remove("border-gray-200");
          option.classList.add("border-primary");
          updateSummary();
        });
      });

      document
        .querySelectorAll('input[type="checkbox"], input[name="delivery"]')
        .forEach((input) => input.addEventListener("change", updateSummary));

      // Listen for custom event from OrderTransit component
      document.addEventListener("transitCostCalculated", () => {
        updateSummary();
      });

      // Initial update
      updateSummary();

      // Form submission handler
      document.querySelector("form")?.addEventListener("submit", async (e) => {
        e.preventDefault();

        const submitBtn = document.getElementById(
          "submitBtn"
        ) as HTMLButtonElement;
        const originalText = submitBtn.textContent;
        submitBtn.disabled = true;
        submitBtn.innerHTML = `
                    <span class="inline-flex items-center">
                        <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                        Wysyłanie...
                    </span>
                `;

        const form = e.target as HTMLFormElement;
        const formData = new FormData(form);

        // Get selected size
        const selectedSize = document.querySelector(
          ".size-option.border-primary"
        );
        const sizeName = selectedSize?.querySelector("h2")?.textContent;
        const sizePrice =
          selectedSize?.querySelector(".text-primary")?.textContent;

        // Get selected delivery
        const selectedDelivery = document.querySelector(
          'input[name="delivery"]:checked'
        ) as HTMLInputElement;
        const deliveryName = selectedDelivery
          ?.closest("label")
          ?.querySelector(".font-medium")?.textContent;

        // Get total price
        const totalPrice = document.getElementById("total-price")?.textContent;

        const data = {
          firstName: formData.get("firstName"),
          lastName: formData.get("lastName"),
          phone: formData.get("phone") || "Brak numeru telefonu",
          street: formData.get("street") || "Brak ulicy",
          houseNumber:
            formData.get("houseNumber") || "Brak numeru domu/mieszkania",
          postalCode: formData.get("postalCode") || "Brak kodu pocztowego",
          city: formData.get("city") || "Brak miasta",
          size: sizeName,
          sizePrice: sizePrice,
          delivery: deliveryName,
          deliveryPrice: selectedDelivery
            ?.closest("label")
            ?.querySelector(".text-primary")?.textContent,
          payment:
            (
              document.querySelector(
                'input[name="payment"]:checked'
              ) as HTMLInputElement
            )?.value || "Nie wybrano metody płatności",
          insulation: (
            document.getElementById("insulation") as HTMLInputElement
          )?.checked,
          legs: (document.getElementById("legs") as HTMLInputElement)?.checked,
          curtain: (document.getElementById("curtain") as HTMLInputElement)
            ?.checked,
          terrace: (document.getElementById("terrace") as HTMLInputElement)
            ?.checked,
          woodBone: (document.getElementById("wood-bone") as HTMLInputElement)
            ?.checked,
          totalPrice: totalPrice,
        };

        const API =
          "https://script.google.com/macros/s/AKfycbyi_DtCVqx3XWWBxehqY_wMgejjs7TXyRnKww19y_16xVvHHdx2Fa-NwKt-ExESMXGMUQ/exec";
        try {
          const response = await fetch(API, {
            method: "POST",
            headers: {},
            body: JSON.stringify(data),
          });

          // Create modal element
          const modal = document.createElement("div");
          modal.className =
            "fixed top-4 left-1/2 transform -translate-x-1/2 p-4 rounded-lg shadow-lg z-50";

          if (response.ok) {
            modal.className +=
              " bg-green-100 border border-green-400 text-green-700";
            modal.textContent = "Zamówienie złożone pomyślnie!";
            form.reset();
          } else {
            modal.className += " bg-red-100 border border-red-400 text-red-700";
            modal.textContent =
              "Upps coś poszło nie tak, złóż zamówienie przez telefon";
          }

          document.body.appendChild(modal);

          // Remove modal after 5 seconds
          setTimeout(() => {
            modal.remove();
          }, 5000);
        } finally {
          // Reset button state
          submitBtn.disabled = false;
          submitBtn.textContent = originalText;
        }
      });
    </script>
  </main>
</Layout>
